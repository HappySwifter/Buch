<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="keywords" content="семейный бюджет, личные финансы">
  <meta name="description" content="Одностраничное веб-приложение для учета личных финансов и планирования семейного бюджета. Доступны следующие функции: учет доходов, учет сбережений, установка лимитов по расходам и учет расходов по категориям. Страница состоит из 4 разделов: доходы, сбережения, лимиты, расходы. По умолчанию отображаются по 5 последних записей в доходах и сбережениях и по 7 последних записей в лимитах и расходах.">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <link rel='stylesheet' href='style.css' />
   <script src='http://code.jquery.com/jquery-1.7.1.min.js'></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>


      <!-- Bootstrap stylesheet -->
    <!-- <link rel="stylesheet" href="css/bootstrap.min.css"> -->
    <!-- bootstrap widget theme -->
    <!-- <link rel="stylesheet" href="https://mottie.github.io/tablesorter/css/theme.bootstrap.css"> -->

    <!-- tablesorter plugin -->
    <!-- <script src="https://mottie.github.io/tablesorter/js/jquery.tablesorter.js"></script> -->
    <!-- tablesorter widget file - loaded after the plugin -->
    <!-- <script src="https://mottie.github.io/tablesorter/js/jquery.tablesorter.widgets.js"></script> -->

    <!-- pager plugin -->
    <!-- <link rel="stylesheet" href="https://mottie.github.io/tablesorter/addons/pager/jquery.tablesorter.pager.css"> -->
    <!-- <script src="https://mottie.github.io/tablesorter/addons/pager/jquery.tablesorter.pager.js"></script> -->


</head>

<body>






<div class="container">

<div id="customAlert">
    
</div>





	<div class="row">

		<div class="col-xs-5"> <!-- ДОХОДЫ -->
		  	<h2><%=accountInfo.title%></h2>
 	        <table class="table table-hover">
                <thead></th><th>Название</th><th>Сумма</th></tr></thead>
                <tbody id="доходы">

                <% accountInfo.info.forEach(function(account) { %>
                <tr>
                    <td>
                        <%=account.name%>
                    </td>
                    <td>
                        <%=account.ammount%>
                    </td>
                </tr>
                <% }) %>

                </tbody>
            </table>
		</div>

		<div class="col-xs-5 pull-right"> <!-- СБЕРЕЖЕНИЯ -->
    <!--  view 2 = Сбережения, разделитель, кнопки - дата, сумма, цель
поле ввода, подсветка, курсор: дд.мм.гг - 0,00 р., квартира - высветленный шрифт
последние 5 операций - таблица, шрифт черный. Кнопка Календарь
нажатие на строку  -> поле, подсветка, курсор
функции кнопок - фильтр +/-, подсветка кнопки при +
Строка Итого, сумма, дата, кнопка календарь. По умолчанию - сумма отображенных.-->
	  		<h2>Сбережения</h2>
  			<p></p> 
		</div>

	 </div>






	<div class="row">


<div class="col-xs-5"> <!-- ЛИМИТЫ -->
    <div>
        <h2><%=categories.title%></h2>
         <button type="button" class="btn btn-primary", id="showInsertCategoryField">+</button> <!-- КНОПКА + -->
    </div>
       
    <form class="form-inline", style="margin-top: 1%;", id="insertCategoryField", hidden="true">
        <input type="text" class="form-control" id="categoryName" placeholder="Название">
        <input type="number" step="100" min="0" class="form-control" id="categoryLimit" placeholder="Лимит">
        <button type="button" class="btn btn-primary", id="insertNewCategory">Внести</button>
    </form>

    <table class="table table-hover", id="Лимиты">
        <thead></th><th class="filter-select filter-exact" data-placeholder="Выберите">Категория</th><th>Потрачено</th><th>Лимит</th></tr></thead>

        <tbody>

        <% categories.info.forEach(function(category) { %>
        <tr>
            <td>
                <%=category.name%>
            </td>
            <td class="значПотрачено">
              <%=category.spent%>
            </td>
            <td class="значЛимита">
                <%=category.limit%>
            </td>
        </tr>
        <% }) %>

        <tr class="ИТОГО">
           <td><b>ИТОГО:</b></td>
           <td class="строкаИтогоПотрачено"></td>
           <td class="строкаИтогоЛимит"><Итого:</td>
        </tr>

        </tbody>
    </table>
 </div>


		<div class="col-xs-5 pull-right"> <!-- РАСХОДЫ -->
		     <h2>Расходы</h2>
	  		<form class="form-inline" style="margin-top: 2%;">
			  <div class="form-group">
			    <input type="number" step="50" min="0" class="form-control" id="outgoungAmount" placeholder="Сумма">
			  </div>
			  <div class="form-group">

				<div class="btn-group">
				  <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false", id="categoryListTouched">Категория <span class="caret"></span></button>
				  <ul class="dropdown-menu", id="dropdownCategories">
				  </ul>
				</div>

			  </div>
			  <button type="button" class="btn btn-primary", id="insertNewTransaction">Внести</button>

			</form>

			<table class="table table-hover", id="расходы">
          <thead></th><th>Потрачено</th><th class="filter-select filter-exact" data-placeholder="Выберите">Категория</th><th>Дата</th></tr></thead>
          <tbody>

          <% transactions.info.forEach(function(transaction) { %>
          <tr>
              <td class="значРасхода">
                  <%=transaction.amount%>
              </td>
              <td>
                  <%=transaction.destination%>
              </td>
              <td>
                  <%=transaction.date%>
              </td>
          </tr>
          <% }) %>

          <tr class="paсходыИТОГО">
             <td><b>ИТОГО:</b></td>
             <td></td>
             <td class="строкаИТОГО">0</td>
          </tr>

          </tbody>
       </table>
		</div>


	 </div>

</div>


<script type="text/javascript">
	
    $(document).ready(function(){
      вычислитьСуммуТрат();
      вычислитьСуммуЛимитов();
      // вычислитьСуммуРасходов();
    });

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////// ЛИМИТЫ /////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    // показать поле создания новой категории
    $('#showInsertCategoryField').click(function() {
        $('#insertCategoryField').toggle()
        $.post('/categories', function(res) {

            $('#dropdownCategories').empty();
             for (var data in res) {
                $('#dropdownCategories').append('<li><a href="#">'+res[data].name+'</a></li>');
            }     
        });
    });


    // создание новой категории расходов
    $('#insertNewCategory').click(function() {
        var categoryName =  $("#categoryName").val()
        var categoryLimit = $("#categoryLimit").val()

        if (!categoryName || !categoryLimit) {
            showAlert("Заполните поля")
            return
        }
        var data = {
             name: 'insertNewCategory',
             categoryName: categoryName,
             categoryLimit: categoryLimit
         };
        console.log(data)
        $.post('/', data, function(res) {

            $('#categoryName').val("");
            $('#categoryLimit').val("");

            for (var data in res) {
                $('#Лимиты').append('<tr><td>'+res[data].name+'</td><td>'+res[data].amount+'</td><td>'+res[data].limit+'</td></tr>');
            }
        });
    });
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////




    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////// РАСХОДЫ ////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    // dropdown показа категорий
    $('#categoryListTouched').click(function() {
        $.post('/categories', function(res) {
            $('#dropdownCategories').empty();
                for (var index in res) {
                    $('#dropdownCategories').append('<li><a href="#">'+res[index].name+'</a></li>');
                }     
        });
    });

    // выбор категории из списка
    $(function() {
        $(".dropdown-menu").on('click', 'li a', function(){
            $(".btn:first-child").text($(this).text());
            $(".btn:first-child").val($(this).text());

        });
    });

    // создание новой транзакции
    $('#insertNewTransaction').click(function() {
        var category =  $(".btn:first-child").val()
        var outgoungAmount = $("#outgoungAmount").val()
        if (!outgoungAmount || outgoungAmount == 0) {
            showAlert("Введите сумму")
            return
        }
        var data = {
             name: 'insertNewTransaction',
             category: category,
             outgoungAmount: outgoungAmount
         };
         console.log(data)

        $.post('/', data, function(res) {

          $("#outgoungAmount").val('')
          $('#расходы').prepend('<tr><td>'+res.amount+'</td><td>'+res.destination+'</td></tr>');
        });
    });
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    

    ////// HELPERS ////////

    function showAlert(text) {
        var alert = $('<div class="alert alert-warning alert-dismissible" role="alert" style="margin-top: 2%;><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>  '+text+'</div>')
        $('#customAlert').append(alert)
    }

    function вычислитьСуммуЛимитов() {
      var total = 0;
      var $dataRows=$("#Лимиты tr:not('.ИТОГО')");

      $dataRows.each(function() {
          $(this).find('.значЛимита').each(function(i){        
              total+=parseInt( $(this).html());
          });
      });
      $("#Лимиты td.строкаИтогоЛимит").html("<b>" +total+ "</b>");
    }

    function вычислитьСуммуТрат() {
      var total = 0;
      var $dataRows=$("#Лимиты tr:not('.ИТОГО')");

      $dataRows.each(function() {
          $(this).find('.значПотрачено').each(function(i){        
              total+=parseInt( $(this).html());
          });
      });
      $("#Лимиты td.строкаИтогоПотрачено").html("<b>" +total+ "</b>");
    }



          
    // function вычислитьСуммуРасходов() {
    //   var total = 0;
    //   var $dataRows=$("#расходы tr:not('.paсходыИТОГО')");

    //   $dataRows.each(function() {
    //       $(this).find('.значРасхода').each(function(i){        
    //           total+=parseInt( $(this).html());
    //       });
    //   });
    //   $("#расходы td.строкаИтогоПотрачено").html("<b>" +total+ "</b>");
    // }





    $(function() {

  // NOTE: $.tablesorter.theme.bootstrap is ALREADY INCLUDED in the jquery.tablesorter.widgets.js
  // file; it is included here to show how you can modify the default classes
  $.tablesorter.themes.bootstrap = {
    // these classes are added to the table. To see other table classes available,
    // look here: http://getbootstrap.com/css/#tables
    table        : 'table table-bordered table-striped',
    caption      : 'caption',
    // header class names
    header       : 'bootstrap-header', // give the header a gradient background (theme.bootstrap_2.css)
    sortNone     : '',
    sortAsc      : '',
    sortDesc     : '',
    active       : '', // applied when column is sorted
    hover        : '', // custom css required - a defined bootstrap style may not override other classes
    // icon class names
    icons        : '', // add "icon-white" to make them white; this icon class is added to the <i> in the header
    iconSortNone : 'bootstrap-icon-unsorted', // class name added to icon when column is not sorted
    iconSortAsc  : 'glyphicon glyphicon-chevron-up', // class name added to icon when column has ascending sort
    iconSortDesc : 'glyphicon glyphicon-chevron-down', // class name added to icon when column has descending sort
    filterRow    : '', // filter row class; use widgetOptions.filter_cssFilter for the input/select element
    footerRow    : '',
    footerCells  : '',
    even         : '', // even row zebra striping
    odd          : ''  // odd row zebra striping
  };

  // call the tablesorter plugin and apply the uitheme widget
  $("table").tablesorter({
    // this will apply the bootstrap theme if "uitheme" widget is included
    // the widgetOptions.uitheme is no longer required to be set
    theme : "bootstrap",

    widthFixed: true,

    headerTemplate : '{content} {icon}', // new in v2.7. Needed to add the bootstrap icon!

    // widget code contained in the jquery.tablesorter.widgets.js file
    // use the zebra stripe widget if you plan on hiding any rows (filter widget)
    widgets : [ "uitheme", "zebra" ], // "filter",

    widgetOptions : {
      // using the default zebra striping class name, so it actually isn't included in the theme variable above
      // this is ONLY needed for bootstrap theming if you are using the filter widget, because rows are hidden
      zebra : ["even", "odd"],

      // reset filters button
      filter_reset : ".reset",

      // extra css class name (string or array) added to the filter element (input or select)
      filter_cssFilter: "form-control",

      // set the uitheme widget to use the bootstrap theme class names
      // this is no longer required, if theme is set
      // ,uitheme : "bootstrap"

    }
  })
  .tablesorterPager({

    // target the pager markup - see the HTML block below
    container: $(".ts-pager"),

    // target the pager page select dropdown - choose a page
    cssGoto  : ".pagenum",

    // remove rows from the table to speed up the sort of large tables.
    // setting this to false, only hides the non-visible rows; needed if you plan to add/remove rows with the pager enabled.
    removeRows: false,

    // output string - default is '{page}/{totalPages}';
    // possible variables: {page}, {totalPages}, {filteredPages}, {startRow}, {endRow}, {filteredRows} and {totalRows}
    output: '{startRow} - {endRow} / {filteredRows} ({totalRows})'

  });

});



 $(document).ready(function () {
    var dataval = parseInt($('.progress').attr("data-amount"));
    if (dataval < 100) {
        $('.progress .amount').css("width", 100 - dataval + "%");
    }

  /*FOR DEMO ONLY*/
    $('#increase').click(function () {
        modifyProgressVal(1);
    });
    $('#decrease').click(function () {
        modifyProgressVal(-1);
    });
    function modifyProgressVal(type) {
        dataval = parseInt($('.progress').attr("data-amount"));
        if (type == 1) dataval = Math.min(100,dataval + 10)
        else if (type == -1) dataval = Math.max(0,dataval - 10);
        $('.progress .amount').css("width", 100 - dataval + "%");
        $('.progress').attr("data-amount", dataval);
    }
});



</script>




<!--         <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#myModal">
        Launch demo modal
        </button> -->

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Modal title</h4>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>



<!-- <table>
  <th colspan="7" class="ts-pager form-horizontal">
    <button type="button" class="btn prev"><i class="icon-arrow-left glyphicon glyphicon-backward"></i></button>
    <button type="button" class="btn next"><i class="icon-arrow-right glyphicon glyphicon-forward"></i></button>
    <select class="pagesize input-mini">
      <option selected="selected" value="10">10</option>
      <option value="20">20</option>
    </select>
  </th>
</table> -->


</body>
</html>












